spring:
  application:
    name: Sharding-JDBC-Demo
  main:
    allow-bean-definition-overriding: true
  #  datasource:
  ##    url: jdbc:mysql://localhost:3306/m_db01?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
  ##    username: root
  ##    password: 123456
  #    driver-class-name: com.mysql.jdbc.Driver
  #    type: com.zaxxer.hikari.HikariDataSource
  #    hikari:
  #      # 自动提交
  #      auto-commit: true
  #      connection-test-query: SELECT 1
  #      # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
  #      # 生产环境 connect-time 10 s
  #      connection-timeout: 9000
  #      # 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），默认:10分钟
  #      idle-timeout: 600000
  #      # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms，建议设置比数据库超时时长少60秒，参考MySQL wait_timeout 7200s 参数（# 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms，建议设置比数据库超时时长少60秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->  ） -->
  #      max-lifetime: 1800000
  #      # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
  #      maximum-pool-size: 15
  #      # 最小连接数
  #      minimum-idle: 10
  #      # 连接池名字
  #      pool-name: DemoHikariCP
  # --------------------------------
  #   ShardingSphere
  # ---------------------------------
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: master0,slave0,master1,slave1
      master0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/m_db01?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
      slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/s_db01?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
      master1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/m_db02?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
      slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/s_db02?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
    # 分库规则（根据id取模）
    sharding:
      binding-tables: goods
      #广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）
      broadcast-tables: t_dict
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: master$->{Math.abs(id)%2}
      ##分表规则根据id取模
      tables:
        goods:
          actual-data-nodes: master$->{0..1}.goods$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: goods$->{Math.abs(id) % 2}
      # 读写分离(需要在mysql端配置bin-log主从同步)
      # 用于配置从库负载均衡算法类型，可选值：ROUND_ROBIN(轮询)，RANDOM（随机）
      master-slave-rules:
        master0:
          master-data-source-name: master0
          slave-data-source-names: slave0
        master1:
          master-data-source-name: master1
          slave-data-source-names: slave1



#自定义properties
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.demo.java.entity
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
    refresh: true
      #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl